//////////////////////////
// todo
//////////////////////////

Find the bug with hc scc
Restructure hc caw to match
Fix the makefile

//////////////////////////
// test kdtree
//////////////////////////

// gcc -DKXVER=3 -fPIC -shared kdnn.c -o kdnn.so

\l kd.q
clust.kd.c.findleaf:.[2:;(`:kdnn;(`kd_findleaf;3))]
clust.kd.i.findleaf2:{[tree;point;node]tree clust.kd.c.findleaf[tree;point;node`self]}

clust.kd.c.nn:.[2:;(`:kdnn;(`kd_nn;5))]
clust.kd.nn2:{[tree;data;df;xidxs;pt]`closestPoint`closestDist!clust.kd.c.nn[tree;data;(1_key clust.i.dd)?df;xidxs;pt]}

\c 20 200
\S 42
data:8 50000#400000?1f
leafsz:4
tree:clust.kd.newtree[data;leafsz]
pts:40 8#4000?1f

\t rq:clust.kd.i.findleaf [tree;;tree 0]each pts;
\t rc:clust.kd.i.findleaf2[tree;;tree 0]each pts;
rq~rc

df:`edist
\t rq:clust.kd.nn [tree;data;df;0#0]each pts
\t rc:clust.kd.nn2[tree;data;df;0#0]each pts
rq~rc
\t rq2:clust.kd.nn [tree;data;df;exec distinct closestPoint from rq]each pts
\t rc2:clust.kd.nn2[tree;data;df;exec distinct closestPoint from rq]each pts
rq2~rc2

df:`e2dist
\t rq:clust.kd.nn [tree;data;df;0#0]each pts
\t rc:clust.kd.nn2[tree;data;df;0#0]each pts
rq~rc
\t rq2:clust.kd.nn [tree;data;df;exec distinct closestPoint from rq]each pts
\t rc2:clust.kd.nn2[tree;data;df;exec distinct closestPoint from rq]each pts
rq2~rc2

df:`mdist
\t rq:clust.kd.nn [tree;data;df;0#0]each pts
\t rc:clust.kd.nn2[tree;data;df;0#0]each pts
rq~rc
\t rq2:clust.kd.nn [tree;data;df;exec distinct closestPoint from rq]each pts
\t rc2:clust.kd.nn2[tree;data;df;exec distinct closestPoint from rq]each pts
rq2~rc2

df:`cshev
\t rq:clust.kd.nn [tree;data;df;0#0]each pts
\t rc:clust.kd.nn2[tree;data;df;0#0]each pts
rq~rc
\t rq2:clust.kd.nn [tree;data;df;exec distinct closestPoint from rq]each pts
\t rc2:clust.kd.nn2[tree;data;df;exec distinct closestPoint from rq]each pts
rq2~rc2

df:`nege2dist
\t rq:clust.kd.nn [tree;data;df;0#0]each pts
\t rc:clust.kd.nn2[tree;data;df;0#0]each pts
rq~rc
\t rq2:clust.kd.nn [tree;data;df;exec distinct closestPoint from rq]each pts
\t rc2:clust.kd.nn2[tree;data;df;exec distinct closestPoint from rq]each pts
rq2~rc2

//////////////////////////
// test hcscc
//////////////////////////

/clust.hcscc:clust.i.scc[;;;;::;::]  / [d;df;lf;k]
/clust.cure :clust.i.scc[;;`cure;;;] / [d;df;k;n;c]

\l scc.q

\c 20 200
\S 42
d: 1000 5#  5000?1f
d,:1000 5#2+5000?1f
d,:1000 5#4+5000?1f
d:flip d
k:3
df:`e2dist
c:0.8
n:4

\t rs:.ml.clust.hcscc[d;df;`single;k]
select from rs where valid

\t rc:.ml.clust.hcscc[d;df;`centroid;k]
select from rc where valid

\t rr:.ml.clust.cure[d;df;k;n;c]
select from rr where valid
